class TrieNode():
    def __init__(self):
        self.children = {}
        self.end = False

class Trie(object):
    def __init__(self):
        self.root = TrieNode()

    def insert(self, word):
        """
        :type word: str
        :rtype: None
        """
        temp = self.root
        for char in word:
            if char not in temp.children:
                temp.children[char] = TrieNode()
            temp = temp.children[char]
        temp.end = True

    def search(self, word):
        """
        :type word: str
        :rtype: bool
        """
        temp = self.root
        for char in word:
            if char not in temp.children:
                return False
            temp = temp.children[char]
        return temp.end
        
    def startsWith(self, prefix):
        """
        :type prefix: str
        :rtype: bool
        """
        temp = self.root
        for char in prefix:
            if char not in temp.children:
                return False
            temp = temp.children[char]
        return True
