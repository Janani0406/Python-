class Solution(object):
    def minimumTime(self, n, relations, time):
        """
        :type n: int
        :type relations: List[List[int]]
        :type time: List[int]
        :rtype: int
        """
        graph = {}
        order = {}
        for i in range(1, n+1):
            graph[i] = []
            order[i] = 0
        for i, j in relations:
            order[i] += 1
            graph[j].append(i)
        

        nodes = []
        for i in order:
            if order[i] == 0:
                nodes.append(i)

        def rec(node):
            maxi = 0
            if node in dp:
                return dp[node]
            for child in graph[node]:
                maxi = max(maxi, rec(child))
            dp[node] = time[node-1] + maxi
            return time[node-1] + maxi

        maximum = 0
        dp = {}
        for node in nodes:
            maximum = max(maximum, rec(node)) 
        return maximum
