# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
from collections import deque
class Solution(object):
    def findMode(self, root):
        """
        :type root: Optional[TreeNode]
        :rtype: List[int]
        """
        queue = deque([root])
        val_freq = {}
        while queue:
             node = queue.popleft()
             val_freq[node.val] = val_freq.get(node.val, 0) + 1
             if node.left:
                queue.append(node.left)
             if node.right:
                queue.append(node.right)
        max_val = max(val_freq.values())
        ans = []
        for node in val_freq:
            if val_freq[node] == max_val:
                ans.append(node)
        return ans
