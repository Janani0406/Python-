# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def findBottomLeftValue(self, root):
        """
        :type root: Optional[TreeNode]
        :rtype: int
        """

        # lets implement using bfs
        q = deque([root])
       
        while len(q) !=0:
            firstvalue = None
            n = len(q)
            for _ in range(n):
                node = q.popleft()
                if firstvalue is None:
                    firstvalue = node.val
                if node.left is not None:
                    q.append(node.left)
                if node.right is not None:
                    q.append(node.right)

            
        return firstvalue





        
