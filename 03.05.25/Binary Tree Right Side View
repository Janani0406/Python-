# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def rightSideView(self, root):
        """
        :type root: Optional[TreeNode]
        :rtype: List[int]
        """
        
        queue = []
        order = []
        vals = []
        res = []
        queue.append((root,0))

        while len(queue)!=0 :


            node, level = queue.pop(0)
            if node!=None:
                #print(node.val, level)
                vals.append(node.val)
                order.append(level)

                if node.left is not None:
                    queue.append((node.left, level+1))

                if node.right is not None:
                    queue.append((node.right, level+1))

        
        for i in range(0,len(order)-1):
            if order[i+1] != order[i]:
                res.append(vals[i])
                
        if len(vals)>0:
            res.append(vals[-1])
        return res
